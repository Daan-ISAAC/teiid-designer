/* Generated By:JJTree: Do not edit this line. CompareCriteria.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package org.teiid.runtime.client.lang.ast;

import org.teiid.runtime.client.lang.parser.TeiidParser;

public class CompareCriteria extends AbstractCompareCriteria {

    /** The right-hand expression. */
    private Expression rightExpression;

    private Boolean isOptional = Boolean.FALSE;

    public CompareCriteria(int id) {
        super(id);
    }

    public CompareCriteria(TeiidParser p, int id) {
        super(p, id);
    }

    /**
     * Set right expression.
     * @param expression Right expression
     */
    public void setRightExpression(Expression expression) { 
        this.rightExpression = expression;
    }
    
    /**
     * Get right expression.
     * @return right expression
     */
    public Expression getRightExpression() {
        return this.rightExpression;
    }

    /**
     * Set during planning to indicate that this criteria is no longer needed
     * to correctly process a join
     * @param isOptional
     */
    public void setOptional(Boolean isOptional) {
        if (isOptional == null && Boolean.TRUE.equals(this.isOptional)) {
            return;
        }
        this.isOptional = isOptional;
    }
    
    /**
     * Returns true if the compare criteria is used as join criteria, but not needed
     * during processing.
     * @return
     */
    public boolean isOptional() {
        return isOptional == null || isOptional;
    }

    /** Accept the visitor. **/
    public void jjtAccept(Teiid8ParserVisitor visitor, Object data) {
        visitor.visit(this, data);
    }
}
/* JavaCC - OriginalChecksum=b3e2979ada751b1aae0903db53c85d1c (do not edit this line) */

/* Generated By:JJTree: Do not edit this line. QueryCommand.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package org.teiid.runtime.client.lang.ast;

import java.util.List;
import org.teiid.runtime.client.lang.parser.TeiidParser;

public class QueryCommand extends Command {

    /** The order in which to sort the results */
    private OrderBy orderBy;

    /** Limit on returned rows */
    private Limit limit;
    
    private List<WithQueryCommand> with;

    public QueryCommand(int id) {
        super(id);
    }

    public QueryCommand(TeiidParser p, int id) {
        super(p, id);
    }

    /**
     * Get the order by clause for the query.
     * @return order by clause
     */
    public OrderBy getOrderBy() {
        return orderBy;
    }
    
    /**
     * Set the order by clause for the query.
     * @param orderBy New order by clause
     */
    public void setOrderBy(OrderBy orderBy) {
        this.orderBy = orderBy;
    }

    public Limit getLimit() {
        return limit;
    }

    public void setLimit(Limit limit) {
        this.limit = limit;
    }
    
    public List<WithQueryCommand> getWith() {
        return with;
    }
    
    public void setWith(List<WithQueryCommand> with) {
        this.with = with;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = super.hashCode();
        result = prime * result + ((this.limit == null) ? 0 : this.limit.hashCode());
        result = prime * result + ((this.orderBy == null) ? 0 : this.orderBy.hashCode());
        result = prime * result + ((this.with == null) ? 0 : this.with.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (!super.equals(obj)) return false;
        if (getClass() != obj.getClass()) return false;
        QueryCommand other = (QueryCommand)obj;
        if (this.limit == null) {
            if (other.limit != null) return false;
        } else if (!this.limit.equals(other.limit)) return false;
        if (this.orderBy == null) {
            if (other.orderBy != null) return false;
        } else if (!this.orderBy.equals(other.orderBy)) return false;
        if (this.with == null) {
            if (other.with != null) return false;
        } else if (!this.with.equals(other.with)) return false;
        return true;
    }

    /** Accept the visitor. **/
    public void jjtAccept(Teiid8ParserVisitor visitor, Object data) {
        visitor.visit(this, data);
    }
}
/* JavaCC - OriginalChecksum=e5518987c086d24b10346b06ef207602 (do not edit this line) */

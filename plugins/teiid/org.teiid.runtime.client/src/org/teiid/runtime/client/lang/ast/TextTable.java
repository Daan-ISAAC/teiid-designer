/* Generated By:JJTree: Do not edit this line. TextTable.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package org.teiid.runtime.client.lang.ast;

import java.util.ArrayList;
import java.util.List;
import org.teiid.runtime.client.lang.TeiidNodeFactory.CommonNodes;
import org.teiid.runtime.client.lang.parser.TeiidParser;

public class TextTable extends FromClause {

    private GroupSymbol symbol;

    private Expression file;

    private List<TextColumn> columns = new ArrayList<TextColumn>();

    private Character delimiter;

    private Character quote;

    private boolean escape;

    private Integer header;

    private Integer skip;

    private boolean usingRowDelimiter = true;

    private String selector;
    
    private boolean fixedWidth;

    public TextTable(int id) {
        super(id);
    }

    public TextTable(TeiidParser p, int id) {
        super(p, id);
    }

    /**
     * Get name of this clause.
     * @return Name of clause
     */
    public String getName() {
        return this.symbol.getName();   
    }
    
    /** 
     * Reset the alias for this subquery from clause and it's pseudo-GroupSymbol.  
     * WARNING: this will modify the hashCode and equals semantics and will cause this object
     * to be lost if currently in a HashMap or HashSet.
     * @param name New name
     * @since 4.3
     */
    public void setName(String name) {
        this.symbol = this.parser.createCommonNode(CommonNodes.GROUP_SYMBOL);
        this.symbol.setName(name);
    }

    /**
     * Get GroupSymbol representing the named subquery 
     * @return GroupSymbol representing the subquery
     */
    public GroupSymbol getGroupSymbol() {
        return this.symbol;    
    }

    /**
     * @return the file
     */
    public Expression getFile() {
        return this.file;
    }

    /**
     * @param file the file to set
     */
    public void setFile(Expression file) {
        this.file = file;
    }

    /**
     * @return the columns
     */
    public List<TextColumn> getColumns() {
        return this.columns;
    }

    /**
     * @param columns the columns to set
     */
    public void setColumns(List<TextColumn> columns) {
        this.columns = columns;
    }

    /**
     * @return the delimiter
     */
    public Character getDelimiter() {
        return this.delimiter;
    }

    /**
     * @param delimiter the delimiter to set
     */
    public void setDelimiter(Character delimiter) {
        this.delimiter = delimiter;
    }

    /**
     * @return the quote
     */
    public Character getQuote() {
        return this.quote;
    }

    /**
     * @param quote the quote to set
     */
    public void setQuote(Character quote) {
        this.quote = quote;
    }

    /**
     * @return the escape
     */
    public boolean isEscape() {
        return this.escape;
    }

    /**
     * @param escape the escape to set
     */
    public void setEscape(boolean escape) {
        this.escape = escape;
    }

    /**
     * @return the header
     */
    public Integer getHeader() {
        return this.header;
    }

    /**
     * @param header the header to set
     */
    public void setHeader(Integer header) {
        this.header = header;
    }

    /**
     * @return the skip
     */
    public Integer getSkip() {
        return this.skip;
    }

    /**
     * @param skip the skip to set
     */
    public void setSkip(Integer skip) {
        this.skip = skip;
    }

    /**
     * @return the usingRowDelimiter
     */
    public boolean isUsingRowDelimiter() {
        return this.usingRowDelimiter;
    }

    /**
     * @param usingRowDelimiter the usingRowDelimiter to set
     */
    public void setUsingRowDelimiter(boolean usingRowDelimiter) {
        this.usingRowDelimiter = usingRowDelimiter;
    }

    /**
     * @return the selector
     */
    public String getSelector() {
        return this.selector;
    }

    /**
     * @param selector the selector to set
     */
    public void setSelector(String selector) {
        this.selector = selector;
    }

    /**
     * @return the fixedWidth
     */
    public boolean isFixedWidth() {
        return this.fixedWidth;
    }

    /**
     * @param fixedWidth the fixedWidth to set
     */
    public void setFixedWidth(boolean fixedWidth) {
        this.fixedWidth = fixedWidth;
    }

    /** Accept the visitor. **/
    public void jjtAccept(Teiid8ParserVisitor visitor, Object data) {
        visitor.visit(this, data);
    }
}
/* JavaCC - OriginalChecksum=ebe49b0b200a80db8dbb7c673231856d (do not edit this line) */

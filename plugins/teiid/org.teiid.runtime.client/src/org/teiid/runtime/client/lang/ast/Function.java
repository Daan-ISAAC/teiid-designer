/* Generated By:JJTree: Do not edit this line. Function.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package org.teiid.runtime.client.lang.ast;

import java.util.Arrays;
import org.teiid.runtime.client.lang.parser.TeiidParser;

public class Function extends SimpleNode implements Expression {

    private Class<?> type;

    private String name;

    private Expression[] args;

//    private FunctionDescriptor descriptor;

    public Function(int id) {
        super(id);
    }

    public Function(TeiidParser p, int id) {
        super(p, id);
    }

    /**
     * Get name of function
     * @return Name of function
     */
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Get function arguments
     * @return Get function arguments
     */
    public Expression[] getArgs() {
        return this.args;
    }

    /**
     * Get argument at specified index
     * @param index Index of argument
     * @return argument
     */
    public Expression getArg(int index) {
        return this.args[index];
    }

    /**
     * Set the function arguments - it is assumed that the args 
     * are not null.  For no arg functions, use an empty Expression array.
     * @param args Function arguments
     */
    public void setArgs(Expression[] args) {
        this.args = args;
    }

    /**
     * Get type of function, if known
     * @return Java class name of type, or null if not yet resolved
     */
    public Class<?> getType() {
        return this.type;
    }

    /**
     * Set type of function
     * @param type New type
     */
    public void setType(Class<?> type) {
        this.type = type;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = super.hashCode();
        result = prime * result + Arrays.hashCode(this.args);
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.type == null) ? 0 : this.type.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (!super.equals(obj)) return false;
        if (getClass() != obj.getClass()) return false;
        Function other = (Function)obj;
        if (!Arrays.equals(this.args, other.args)) return false;
        if (this.name == null) {
            if (other.name != null) return false;
        } else if (!this.name.equals(other.name)) return false;
        if (this.type == null) {
            if (other.type != null) return false;
        } else if (!this.type.equals(other.type)) return false;
        return true;
    }

    /** Accept the visitor. **/
    public void jjtAccept(Teiid8ParserVisitor visitor, Object data) {
        visitor.visit(this, data);
    }
}
/* JavaCC - OriginalChecksum=117ee9a033f03357a27a00cd03284aa4 (do not edit this line) */

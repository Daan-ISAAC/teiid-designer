/* Generated By:JJTree: Do not edit this line. From.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package org.teiid.runtime.client.lang.ast;

import java.util.List;
import org.teiid.runtime.client.lang.parser.TeiidParser;

public class From extends SimpleNode {

    private List<? extends FromClause> clauses;

    public From(int id) {
        super(id);
    }

    public From(TeiidParser p, int id) {
        super(p, id);
    }

    /** 
     * Get all the clauses in FROM
     * @return List of {@link FromClause}
     */
    public List<? extends FromClause> getClauses() {
        return this.clauses;
    }
    
    /** 
     * Set all the clauses
     * @param clauses List of {@link FromClause}
     */
    public void setClauses(List<? extends FromClause> clauses) {
        this.clauses = clauses;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = super.hashCode();
        result = prime * result + ((this.clauses == null) ? 0 : this.clauses.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (!super.equals(obj)) return false;
        if (getClass() != obj.getClass()) return false;
        From other = (From)obj;
        if (this.clauses == null) {
            if (other.clauses != null) return false;
        } else if (!this.clauses.equals(other.clauses)) return false;
        return true;
    }

    /** Accept the visitor. **/
    public void jjtAccept(Teiid8ParserVisitor visitor, Object data) {
        visitor.visit(this, data);
    }
}
/* JavaCC - OriginalChecksum=ae9ea7eb99f07c1bca94932f9265c796 (do not edit this line) */

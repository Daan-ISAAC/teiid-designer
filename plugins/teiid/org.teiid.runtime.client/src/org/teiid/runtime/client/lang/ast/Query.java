/* Generated By:JJTree: Do not edit this line. Query.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package org.teiid.runtime.client.lang.ast;

import java.util.List;
import org.teiid.runtime.client.lang.parser.TeiidParser;

public class Query extends QueryCommand {

    /** The select clause. */
    private Select select;

    /** The from clause. */
    private From from;

    /** The criteria specifying constraints on what data will be retrieved. */
    private Criteria criteria;

    /** The group by specifying how to group rows. */
    private GroupBy groupBy;

    /** The having specifying which group rows will be returned. */
    private Criteria having;

    /** XML flag */
    private boolean isXML;

    /** The into clause. */
    private Into into;

    /** xml projected symbols */
    private List<Expression> selectList;

    public Query(int id) {
        super(id);
    }

    public Query(TeiidParser p, int id) {
        super(p, id);
    }

    /**
     * @return the select
     */
    public Select getSelect() {
        return this.select;
    }

    /**
     * @param select the select to set
     */
    public void setSelect(Select select) {
        this.select = select;
    }

    /**
     * @return the from
     */
    public From getFrom() {
        return this.from;
    }

    /**
     * @param from the from to set
     */
    public void setFrom(From from) {
        this.from = from;
    }

    /**
     * @return the criteria
     */
    public Criteria getCriteria() {
        return this.criteria;
    }

    /**
     * @param criteria the criteria to set
     */
    public void setCriteria(Criteria criteria) {
        this.criteria = criteria;
    }

    /**
     * @return the groupBy
     */
    public GroupBy getGroupBy() {
        return this.groupBy;
    }

    /**
     * @param groupBy the groupBy to set
     */
    public void setGroupBy(GroupBy groupBy) {
        this.groupBy = groupBy;
    }

    /**
     * @return the having
     */
    public Criteria getHaving() {
        return this.having;
    }

    /**
     * @param having the having to set
     */
    public void setHaving(Criteria having) {
        this.having = having;
    }

    /**
     * @return the isXML
     */
    public boolean isXML() {
        return this.isXML;
    }

    /**
     * @param isXML the isXML to set
     */
    public void setXML(boolean isXML) {
        this.isXML = isXML;
    }

    /**
     * @return the into
     */
    public Into getInto() {
        return this.into;
    }

    /**
     * @param into the into to set
     */
    public void setInto(Into into) {
        this.into = into;
    }

    /**
     * @return the selectList
     */
    public List<Expression> getSelectList() {
        return this.selectList;
    }

    /**
     * @param selectList the selectList to set
     */
    public void setSelectList(List<Expression> selectList) {
        this.selectList = selectList;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = super.hashCode();
        result = prime * result + ((this.criteria == null) ? 0 : this.criteria.hashCode());
        result = prime * result + ((this.from == null) ? 0 : this.from.hashCode());
        result = prime * result + ((this.groupBy == null) ? 0 : this.groupBy.hashCode());
        result = prime * result + ((this.having == null) ? 0 : this.having.hashCode());
        result = prime * result + ((this.into == null) ? 0 : this.into.hashCode());
        result = prime * result + (this.isXML ? 1231 : 1237);
        result = prime * result + ((this.select == null) ? 0 : this.select.hashCode());
        result = prime * result + ((this.selectList == null) ? 0 : this.selectList.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (!super.equals(obj)) return false;
        if (getClass() != obj.getClass()) return false;
        Query other = (Query)obj;
        if (this.criteria == null) {
            if (other.criteria != null) return false;
        } else if (!this.criteria.equals(other.criteria)) return false;
        if (this.from == null) {
            if (other.from != null) return false;
        } else if (!this.from.equals(other.from)) return false;
        if (this.groupBy == null) {
            if (other.groupBy != null) return false;
        } else if (!this.groupBy.equals(other.groupBy)) return false;
        if (this.having == null) {
            if (other.having != null) return false;
        } else if (!this.having.equals(other.having)) return false;
        if (this.into == null) {
            if (other.into != null) return false;
        } else if (!this.into.equals(other.into)) return false;
        if (this.isXML != other.isXML) return false;
        if (this.select == null) {
            if (other.select != null) return false;
        } else if (!this.select.equals(other.select)) return false;
        if (this.selectList == null) {
            if (other.selectList != null) return false;
        } else if (!this.selectList.equals(other.selectList)) return false;
        return true;
    }

    /** Accept the visitor. **/
    public void jjtAccept(Teiid8ParserVisitor visitor, Object data) {
        visitor.visit(this, data);
    }
}
/* JavaCC - OriginalChecksum=5836b6b4cdb7e7d9afd6ee599f469169 (do not edit this line) */

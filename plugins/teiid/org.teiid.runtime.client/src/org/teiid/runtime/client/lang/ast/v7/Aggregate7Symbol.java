/* Generated By:JJTree: Do not edit this line. AggregateSymbol.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package org.teiid.runtime.client.lang.ast.v7;

import org.teiid.runtime.client.lang.ast.AggregateSymbol;
import org.teiid.runtime.client.lang.ast.Expression;
import org.teiid.runtime.client.lang.ast.ExpressionSymbol;

/**
 * From Teiid Version 7, the AggregateSymbol extends ExpressionSymbol.
 * This is changed in version 8.
 */
public class Aggregate7Symbol extends ExpressionSymbol implements AggregateSymbol {

    private Expression condition;

    public Aggregate7Symbol(int id) {
        super(id);
    }

    public Aggregate7Symbol(Teiid7Parser p, int id) {
        super(p, id);
    }

//    /**
//     * Get the type of the symbol, which depends on the aggregate function and the
//     * type of the contained expression
//     * @return Type of the symbol
//     */
//    public Class<?> getType() {
//        switch (this.aggregate) {
//        case COUNT:
//            return COUNT_TYPE;
//        case SUM:
//            Class<?> expressionType = this.getArg(0).getType();
//            return SUM_TYPES.get(expressionType);
//        case AVG:
//            expressionType = this.getArg(0).getType();
//            return AVG_TYPES.get(expressionType);
//        case ARRAY_AGG:
//            if (this.getArg(0) == null) {
//                return null;
//            }
//            return DataTypeManager.getArrayType(this.getArg(0).getType());
//        case TEXTAGG:
//            return DataTypeManager.DefaultDataClasses.BLOB;
//        case USER_DEFINED:
//            if (this.getFunctionDescriptor() == null) {
//                return null;
//            }
//            return this.getFunctionDescriptor().getReturnType();
//        case JSONARRAY_AGG:
//            return DataTypeManager.DefaultDataClasses.CLOB;
//        case STRING_AGG:
//            return super.getType();
//        }
//        if (isBoolean()) {
//            return DataTypeManager.DefaultDataClasses.BOOLEAN;
//        }
//        if (isEnhancedNumeric()) {
//            return DataTypeManager.DefaultDataClasses.DOUBLE;
//        }
//        if (isAnalytical()) {
//            return DataTypeManager.DefaultDataClasses.INTEGER;
//        }
//        if (this.getArgs().length == 0) {
//            return null;
//        }
//        return this.getArg(0).getType();
//    }

    /** Accept the visitor. **/
    public void jjtAccept(Teiid7ParserVisitor visitor, Object data) {
        visitor.visit((AggregateSymbol) this, data);
    }
}
/* JavaCC - OriginalChecksum=7efdc98eb15b01c236003d9dc5fca445 (do not edit this line) */

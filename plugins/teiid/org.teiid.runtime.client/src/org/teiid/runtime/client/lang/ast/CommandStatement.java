/* Generated By:JJTree: Do not edit this line. CommandStatement.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package org.teiid.runtime.client.lang.ast;

import org.teiid.runtime.client.lang.parser.TeiidParser;
import org.teiid.runtime.client.lang.parser.AbstractTeiidParserVisitor;

public class CommandStatement extends Statement {

    // the command this statement represents
    private Command command;

    private boolean returnable = true;

    public CommandStatement(int id) {
        super(id);
    }

    public CommandStatement(TeiidParser p, int id) {
        super(p, id);
    }

    /**
     * Get the command on this statement.
     * @return The <code>Command</code> on this statement
     */
    public Command getCommand() {
        return command; 
    }

    public void setCommand(Command command){
        this.command = command;
    }

    public boolean isReturnable() {
        return returnable;
    }
    
    public void setReturnable(boolean returnable) {
        this.returnable = returnable;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = super.hashCode();
        result = prime * result + ((this.command == null) ? 0 : this.command.hashCode());
        result = prime * result + (this.returnable ? 1231 : 1237);
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (!super.equals(obj)) return false;
        if (getClass() != obj.getClass()) return false;
        CommandStatement other = (CommandStatement)obj;
        if (this.command == null) {
            if (other.command != null) return false;
        } else if (!this.command.equals(other.command)) return false;
        if (this.returnable != other.returnable) return false;
        return true;
    }

    /** Accept the visitor. **/
    public void accept(AbstractTeiidParserVisitor visitor, Object data) {
        visitor.visit(this, data);
    }
}
/* JavaCC - OriginalChecksum=62f9df6ce048861851414036eed990e3 (do not edit this line) */

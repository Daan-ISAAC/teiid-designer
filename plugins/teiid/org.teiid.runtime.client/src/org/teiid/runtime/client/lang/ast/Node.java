/* Generated By:JJTree: Do not edit this line. Node.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=,NODE_EXTENDS=,NODE_FACTORY=TeiidNodeFactory,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package org.teiid.runtime.client.lang.ast;

import org.teiid.runtime.client.lang.parser.LanguageVisitor;

/* All AST nodes must implement this interface.  It provides basic
   machinery for constructing the parent and child relationships
   between nodes. */

/**
 *
 */
public interface Node {

    /**
     * This method is called after the node has been made the current
     * node.  It indicates that child nodes can now be added to it.
     */
    public void jjtOpen();

    /**
     * This method is called after all the child nodes have been
     * added.
     */
    public void jjtClose();

    /**
     * This pair of methods are used to inform the
     * node of its parent.
     * 
     * @param n
     */
    public void jjtSetParent(Node n);

    /**
     * @return parent
     */
    public Node jjtGetParent();

    /**
     * This method tells the node to add its argument
     * to the node's list of children.
     *
     * @param n
     * @param i 
     */
    public void jjtAddChild(Node n, int i);

    /** 
     * This method returns a child node.  The children are numbered
     * from zero, left to right. 
     * @param i
     *
     * @return child at i
     */
    public Node jjtGetChild(int i);

    /**
     * Return the number of children the node has
     *
     * @return count of children
     */
    public int jjtGetNumChildren();

    /**
     * Accept the visitor
     *
     * @param visitor
     **/
    public void acceptVisitor(LanguageVisitor visitor);
}
/* JavaCC - OriginalChecksum=6764f8f167c7f7dd0e5bed5ffc2e199c (do not edit this line) */

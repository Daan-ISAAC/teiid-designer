/* Generated By:JJTree: Do not edit this line. OrderBy.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package org.teiid.runtime.client.lang.ast;

import java.util.ArrayList;
import java.util.List;
import org.teiid.runtime.client.Messages;
import org.teiid.runtime.client.lang.TeiidNodeFactory.ASTNodes;
import org.teiid.runtime.client.lang.parser.TeiidParser;
import org.teiid.runtime.client.lang.parser.AbstractTeiidParserVisitor;

public class OrderBy extends SimpleNode {

    private List<OrderByItem> orderByItems = new ArrayList<OrderByItem>();

    public OrderBy(int id) {
        super(id);
    }

    public OrderBy(TeiidParser p, int id) {
        super(p, id);
    }

    public List<OrderByItem> getOrderByItems() {
        return this.orderByItems;
    }

    /**
     * Adds a new variable to the list of order by elements.
     * @param element Element to add
     */
    public void addVariable( Expression element ) {
        addVariable(element, true);
    }

    /**
     * Adds a new variable to the list of order by elements with the
     * specified sort order
     * @param element Element to add
     * @param type True for ascending, false for descending
     */
    public void addVariable( Expression element, boolean type ) {
        if(element == null)
            throw new IllegalArgumentException(Messages.getString(Messages.ERR.ERR_015_010_0021));

        OrderByItem orderByItem = parser.createASTNode(ASTNodes.ORDER_BY_ITEM);
        orderByItem.setSymbol(element);
        orderByItem.setAscending(type);
        orderByItems.add(orderByItem);
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = super.hashCode();
        result = prime * result + ((this.orderByItems == null) ? 0 : this.orderByItems.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (!super.equals(obj)) return false;
        if (getClass() != obj.getClass()) return false;
        OrderBy other = (OrderBy)obj;
        if (this.orderByItems == null) {
            if (other.orderByItems != null) return false;
        } else if (!this.orderByItems.equals(other.orderByItems)) return false;
        return true;
    }

    /** Accept the visitor. **/
    public void accept(AbstractTeiidParserVisitor visitor, Object data) {
        visitor.visit(this, data);
    }
}
/* JavaCC - OriginalChecksum=6b23125e8c3c5abfe22f4f4ae93fb66d (do not edit this line) */

/* Generated By:JJTree: Do not edit this line. XMLQuery.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package org.teiid.runtime.client.lang.ast;

import java.util.ArrayList;
import java.util.List;
import org.teiid.runtime.client.lang.parser.TeiidParser;
import org.teiid.runtime.client.types.DataTypeManagerService;

public class XMLQuery extends SimpleNode implements Expression {

    private XMLNamespaces namespaces;

    private String xquery;

    private List<DerivedColumn> passing = new ArrayList<DerivedColumn>();

    private Boolean emptyOnEmpty;

    public XMLQuery(int id) {
        super(id);
    }

    public XMLQuery(TeiidParser p, int id) {
        super(p, id);
    }

    public Boolean getEmptyOnEmpty() {
        return emptyOnEmpty;
    }
    
    public void setEmptyOnEmpty(Boolean emptyOnEmpty) {
        this.emptyOnEmpty = emptyOnEmpty;
    }
    
    public List<DerivedColumn> getPassing() {
        return passing;
    }

    /**
     * @param passing the passing to set
     */
    public void setPassing(List<DerivedColumn> passing) {
        this.passing = passing;
    }

    public String getXquery() {
        return xquery;
    }
    
    public void setXquery(String xquery) {
        this.xquery = xquery;
    }
    
    public XMLNamespaces getNamespaces() {
        return namespaces;
    }
    
    public void setNamespaces(XMLNamespaces namespaces) {
        this.namespaces = namespaces;
    }

    @Override
    public Class<?> getType() {
        return DataTypeManagerService.DefaultDataTypes.XML.getTypeClass();
    }

    /** Accept the visitor. **/
    public void jjtAccept(Teiid8ParserVisitor visitor, Object data) {
        visitor.visit(this, data);
    }
}
/* JavaCC - OriginalChecksum=b931394cf8251b585a24b9099cf30d2c (do not edit this line) */
